Open
----

17 Files for a test system aren't watched to trigger AUTORUN.

Closed
------

1. When LS tests were autorunning and autorun and we used
   autorun in SDB, the LS test suit seemed to trigger two or
   three dozen times in a row.
-- Went away with queue driven redesign

2. Is handler aborting the rest of the clauses to a test and on error
   instead of running them?
-- can't reproduce

3. Argument values aren't shown in any way.
-- added printing of function arguments for failed tests

4. No option to drop into the debugger. Could expose through a global
   special.
-- added *handle-errors*

5. Need a way to stop autorun
-- Fixed; call AUTORUN again to toggle it.

6. Somehow we managed to deadlock sbcl when stress testing
   autorun (this may have been related with running
   autorun multiple times for the same system and manually
   killing threads)
-- Can't reproduce. Probably eliminated when AUTORUN was
   rewritten.

9. Compilation errors triggered by AUTORUN open the debugger,
   this is probably undesirable. The undesirability is exacerbated by
   the fact that the test running seems to be sometimes triggered at
   random.
-- Fixed by adding a handler-bind in yarty:test-system and adding
   *handle-autorun-compilation-errors*

10 When an error is thrown by evaluation of a function's argument
   during EACH, the function's arguments are erroneously reported as
   returning nil.
-- Fixed

14 TEST-ON-CHANGE is a clunky name. Maybe call it AUTORUN or AUTOTEST
   or simply AUTO?
-- AUTORUN, as a parallel to RUN-TESTS.

8. Starting AUTORUN failing with FAMOpen2 error code 3, this
   seems to be related to either little free memory or having already
   run fam before (possibly with an ungraceful exit/hanging)
-- removed cl-fam dependency

11 Under AUTORUN tests seem to sometimes trigger at
   random. Initial hypothesis: emacs autosave files are triggering
   fam.
-- Using asdf to choose relevant files to watch.

12 Ran into a situation where autorun kept triggering
   constantly while trying to write a large cdb file.
-- Using asdf to choose relevant files to watch.

15 It should be possible to YARTY:RUN-TESTS or (asdf:test-system 'foo)
   /without/ loading autorun.lisp -- especially /without/ bring in the
   cl-fam dependency. This is important so that end users of libraries
   which use YARTY can run the test suite with hopefully minimum
   overhead. (The C FAM/Gamin dependency is particularly egregious,
   and so is requesting that the user manually install my fork of
   cl-fam, but it might be nice to make BT and LPARALLEL loading
   contingent on AUTORUN use as well.)
-- removed cl-fam dependency

16 AUTORUN should only trigger when a _relevant_ file is
   changed. Related to 11 and 12.
-- Using asdf to choose relevant files to watch.

18 Computing files-to-watch every .5 seconds is taking significant
   compute power (~8% processor of a small digital ocean server).
-- Only recompute them when a change is detected; also watch the .asd.


20 *handle-autorun-compilation-errors* also causes test errors to be
   handled.
-- *handle-autorun-compilation-errors* is no longer an option, specify
   that autorun also binds *handle-errors* to true.

19 Error handling should instead be serious condition handling.
-- change from *handle-errors* to *handle-serious-conditions*


21 In autorun, results of test-system are being added to a channel but
   never recieved; growing the channel indefinitely
-- Flush the channel

13 During *12 calling autorun from entering the debugger with
   an interrupt failed to kill the autorun threads. After the
   file was finished writing we were able to kill the threads.
-- Can't reproduce. Hopefully fixed by the refactoring that has
   happend since it was reported.

7. Sending autorun output to the repl is unsatisfactory, and probably
   requires setup not described in the readme.
-- For now, we consider the output as good enough and mention in the
   README that slime may need to be configured to redirect output.

22 Tests should be restartable when conditions aren't handled.
-- Add continue restart.
